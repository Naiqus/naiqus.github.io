<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
<title type="text">Wake up, Naiqus!</title>
<generator uri="https://github.com/jekyll/jekyll">Jekyll</generator>
<link rel="self" type="application/atom+xml" href="http://naiqus.github.io/feed.xml" />
<link rel="alternate" type="text/html" href="http://naiqus.github.io" />
<updated>2015-06-19T01:10:40+02:00</updated>
<id>http://naiqus.github.io/</id>
<author>
  <name>Naiqus</name>
  <uri>http://naiqus.github.io/</uri>
  
</author>


  

<entry>
  <title type="html"><![CDATA[Install Discourse on 1und1 Virtual Server L Centos 6 x64]]></title>
  <link rel="alternate" type="text/html" href="http://naiqus.github.io/install-discourse-on-1und1-vps/" />
  <id>http://naiqus.github.io/install-discourse-on-1und1-vps</id>
  <published>2015-06-18T22:24:00+02:00</published>
  <updated>2015-06-18T22:24:00+02:00</updated>
  <author>
    <name>Naiqus</name>
    <uri>http://naiqus.github.io</uri>
    
  </author>
  <content type="html">&lt;blockquote&gt;
  &lt;p&gt;This post is adapted from a step by step tutorial &lt;a href=&quot;https://www.digitalocean.com/community/tutorials/how-to-install-discourse-on-a-centos-6-4-x64-vps&quot;&gt;here&lt;/a&gt;. I’ve encountered a few problems following that guide to install discourse on my 1und1 server. The server is almost free for students and has a few constrains on the configuration. So I made some adjustments here to avoid the problems I met back then.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;
&lt;section id=&quot;table-of-contents&quot; class=&quot;toc&quot;&gt;
  &lt;header&gt;
    &lt;h3&gt;Overview&lt;/h3&gt;
  &lt;/header&gt;
&lt;div id=&quot;drawer&quot;&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#step-1-os-configuration&quot;&gt;Step 1: OS Configuration&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#add-swap-space&quot;&gt;Add Swap Space&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#create-a-local-non-root-user&quot;&gt;Create a local, non-root user&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#create-a-non-root-user-that-will-run-discourse&quot;&gt;Create a non-root user that will run Discourse&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#add-the-epel-repository&quot;&gt;Add the EPEL repository&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#install-required-packages&quot;&gt;Install required packages&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#install-and-start-redis&quot;&gt;Install and start Redis&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#step-2-install-ngnix&quot;&gt;Step 2: Install ngnix&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#add-repository&quot;&gt;Add repository&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#step-3-install-postgresql&quot;&gt;Step 3: Install PostgreSQL&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#disable-centos-repository&quot;&gt;Disable CentOS repository&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#install-the-postgresql-repository&quot;&gt;Install the PostgreSQL repository&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#grant-permissions-to-users&quot;&gt;Grant permissions to users&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#step-4-install-rvm-and-ruby&quot;&gt;Step 4: Install rvm and Ruby&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#install-rvm&quot;&gt;Install rvm&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#verify-packages-rvm-requires-are-installed&quot;&gt;Verify packages rvm requires are installed&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#install-ruby&quot;&gt;Install ruby&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#tweak-ruby-configuration&quot;&gt;Tweak ruby configuration&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#step-5-install-and-configure-discourse&quot;&gt;Step 5: Install and Configure Discourse&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#build-discourse&quot;&gt;Build Discourse&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#configure-discourse&quot;&gt;Configure Discourse&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#create-database&quot;&gt;Create database&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#fix-permissions&quot;&gt;Fix permissions&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#run-discourse&quot;&gt;Run Discourse&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#step-7-configure-ngnix&quot;&gt;Step 7: Configure ngnix&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#base-ngnix-configuration&quot;&gt;Base ngnix configuration&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#configure-nginx-for-discourse&quot;&gt;Configure nginx for Discourse&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#change-servername-to-your-hostname&quot;&gt;Change server_name to your hostname.&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#step-8-use-discourse&quot;&gt;Step 8: Use Discourse!&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#create-your-discourse-user&quot;&gt;Create your Discourse user&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#grant-yourself-administrative-priveleges&quot;&gt;Grant yourself administrative priveleges&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#some-useful-commands-for-maintenance&quot;&gt;Some useful commands for maintenance&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#start-discourse&quot;&gt;Start discourse&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#simple-script-to-update&quot;&gt;Simple script to update&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

  &lt;/div&gt;
&lt;/section&gt;
&lt;!-- /#table-of-contents --&gt;

&lt;h2 id=&quot;step-1-os-configuration&quot;&gt;Step 1: OS Configuration&lt;/h2&gt;

&lt;p&gt;here are a handful of prerequisites for running Discourse; this tutorial will assume a fresh Centos 6 VPS.&lt;/p&gt;

&lt;h3 id=&quot;add-swap-space&quot;&gt;Add Swap Space&lt;/h3&gt;

&lt;p&gt;If you’re running a VPS with less than 2 GB of RAM, you’ll need to enable swap on your VPS. If you do not do so, some build steps are likely to fail.&lt;/p&gt;

&lt;p&gt;This tutorial has instructions on enabling swap for CentOS 6. For smaller VPS, add at least 1 GB of swap space.&lt;/p&gt;

&lt;h3 id=&quot;create-a-local-non-root-user&quot;&gt;Create a local, non-root user&lt;/h3&gt;

&lt;p&gt;Most steps will be run as a non-root user with sudo access. &lt;a href=&quot;https://www.digitalocean.com/community/tutorials/how-to-add-and-delete-users-on-ubuntu-12-04-and-centos-6&quot;&gt;This tutorial&lt;/a&gt; will run you through creating a user account and granting it sudo power.&lt;/p&gt;

&lt;h3 id=&quot;create-a-non-root-user-that-will-run-discourse&quot;&gt;Create a non-root user that will run Discourse&lt;/h3&gt;

&lt;p&gt;You’ll also need a user account which will run Discourse. It’s best for this to be a different account from your own. discourse would be a good choice.&lt;/p&gt;

&lt;p&gt;You can create the sudo user by opening the sudoers file with this command:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;sudo /usr/sbin/visudo&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Adding the user’s name and the same permissions as root under the the user privilege specification will grant them the sudo privileges.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;# User privilege specification&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;root    ALL=(ALL:ALL) ALL &lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;newuser	ALL=(ALL:ALL) ALL&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;add-the-epel-repository&quot;&gt;Add the EPEL repository&lt;/h3&gt;

&lt;p&gt;EPEL stands for Extra Packages for Enterprise Linux, and it has some packages we’ll need to install that are not part of the base CentOS repositories.&lt;/p&gt;

&lt;p&gt;Log in as your local user and run:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;sudo su -c &amp;#39;rpm -Uvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;install-required-packages&quot;&gt;Install required packages&lt;/h3&gt;

&lt;p&gt;These are pre-requisites for Discourse or its pre-requisites.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;sudo yum install gcc-c++ patch readline readline-devel zlib zlib-devel libyaml-devel libffi-devel openssl-devel make bzip2 autoconf automake libtool bison iconv-devel ruby-devel libxml2 libxml2-devel libxslt libxslt-devel git&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;install-and-start-redis&quot;&gt;Install and start Redis&lt;/h3&gt;

&lt;p&gt;Redis is an open-source key value data store used by Discourse.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;sudo yum install redis.x86_64&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;sudo chkconfig --add redis&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;sudo chkconfig --level 345 redis on&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;sudo /etc/init.d/redis start&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;step-2-install-ngnix&quot;&gt;Step 2: Install ngnix&lt;/h2&gt;

&lt;p&gt;Ngnix is a lightweight web server and reverse proxy that will be used to reverse proxy connections to Discourse.&lt;/p&gt;

&lt;h3 id=&quot;add-repository&quot;&gt;Add repository&lt;/h3&gt;

&lt;p&gt;ngnix is not in the central CentOS repositories, so you will have to add their repository for yum to be able to install ngnix.&lt;/p&gt;

&lt;p&gt;Create a text file /etc/yum.repos.d/nginx.repo:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;sudo vi /etc/yum.repos.d/nginx.repo&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Paste in this content:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;[nginx]&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;name=nginx repo&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;baseurl=http://nginx.org/packages/centos/6/$basearch/&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;gpgcheck=0&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;enabled=1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Once that’s installed, you need to refresh the yum package list and then install ngnix.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;sudo yum upgrade&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;sudo yum install nginx.x86_64&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;step-3-install-postgresql&quot;&gt;Step 3: Install PostgreSQL&lt;/h2&gt;

&lt;p&gt;Discourse uses PostgreSQL for its data backend. While the EPEL contains packages for PostgreSQL, it’s fairly outdated. This will install a newer package from PostgreSQL’s repository.&lt;/p&gt;

&lt;h3 id=&quot;disable-centos-repository&quot;&gt;Disable CentOS repository&lt;/h3&gt;

&lt;p&gt;First we’ll tell yum to not look at packages from the core CentOS repository. To do this, edit the file /etc/yum.repos.d/CentOS-Base.repo.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;sudo vi /etc/yum.repos.d/CentOS-Base.repo&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Add the line:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;exclude=postgresql*&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;under the [base] and [updates] sections of this file.&lt;/p&gt;

&lt;h3 id=&quot;install-the-postgresql-repository&quot;&gt;Install the PostgreSQL repository&lt;/h3&gt;

&lt;p&gt;Now we’ll register PostgreSQL’s repository with yum.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;sudo curl -O http://yum.postgresql.org/9.1/redhat/rhel-6-i386/pgdg-centos91-9.1-4.noarch.rpm&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;sudo rpm -ivh pgdg-centos91-9.1-4.noarch.rpm &lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;Install the PostgreSQL server&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This will install the server and some development packages needed by Discourse, start the server, initialize the database, and set it to start on reboot.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;sudo yum install postgresql91-server.x86_64 postgresql91-contrib.x86_64 postgresql91-devel.x86_64&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;sudo service postgresql-9.1 initdb&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;sudo service postgresql-9.1 start&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;sudo chkconfig postgresql-9.1 on&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;grant-permissions-to-users&quot;&gt;Grant permissions to users&lt;/h3&gt;

&lt;p&gt;Now tell PostgreSQL about our users and give them permission to access the database.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;sudo -u postgres createuser -s root&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;sudo -u postgres createuser -s discourse&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;step-4-install-rvm-and-ruby&quot;&gt;Step 4: Install rvm and Ruby&lt;/h2&gt;

&lt;p&gt;Ruby and rvm will be installed in single-user context for the discourse user.&lt;/p&gt;

&lt;h3 id=&quot;install-rvm&quot;&gt;Install rvm&lt;/h3&gt;

&lt;p&gt;Become the discourse user and install the stable branch of rvm:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;sudo su - discourse&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;\curl -s -S -L https://get.rvm.io | bash -s stable&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;rvm will add some environment setup to the login scripts for the discourse user; to make sure these are set it’s easiest to log out then back in.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;exit&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;sudo su - discourse&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;verify-packages-rvm-requires-are-installed&quot;&gt;Verify packages rvm requires are installed&lt;/h3&gt;

&lt;p&gt;This will make sure the environment is set up correctly and rvm is ready to work. Again, as the discourse user, run:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;rvm --autolibs=read-fail requirements&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This should return that no additional packages are required by rvm.&lt;/p&gt;

&lt;h3 id=&quot;install-ruby&quot;&gt;Install ruby&lt;/h3&gt;

&lt;p&gt;As the discourse user, install a local ruby environment and bundler:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;rvm install 2.2.2&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;$ source /home/discourse/.rvm/scripts/rvm&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;rvm use 2.2.2 --default &lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;gem install bundler&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;tweak-ruby-configuration&quot;&gt;Tweak ruby configuration&lt;/h3&gt;

&lt;p&gt;By default, the gem builder will not be able to find the support libraries and binaries for the system’s PostgreSQL server. In order for this gem to build, this will tell bundle to pass commandline arguments when it builds the PostgresSQL library.&lt;/p&gt;

&lt;p&gt;Still as the discourse user, run:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;bundle config build.pg --with-pgsql-lib=/usr/pgsql-9.1/lib --with-pg-config=/usr/pgsql-9.1/bin/pg_config&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;step-5-install-and-configure-discourse&quot;&gt;Step 5: Install and Configure Discourse&lt;/h2&gt;

&lt;p&gt;Now the system is ready to build and run Discourse.&lt;/p&gt;

&lt;h3 id=&quot;build-discourse&quot;&gt;Build Discourse&lt;/h3&gt;

&lt;p&gt;As the discourse user, pull down the Discourse source using git. This will clone the Discourse git tree to a sub-folder discourse:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;git clone git://github.com/discourse/discourse.git discourse&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Once that has copied the source locally, build Discourse:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;cd discourse&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;bundle install --deployment --without test&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you encounter problem in this step, try this:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;bundle install --no-deployment &lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;gem install ember-source -v=1.0.0.rc6.2 &lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;bundle&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;configure-discourse&quot;&gt;Configure Discourse&lt;/h3&gt;

&lt;p&gt;Copy the example configuration files so Discourse will find them:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;cd config&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;cp database.yml.production-sample database.yml&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;cp redis.yml.sample redis.yml&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;cp discourse.pill.sample discourse.pill&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;cp environments/production.rb.sample environments/production.rb&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You’ll need to edit database.yml. Change the host_names line to your server’s hostname.&lt;/p&gt;

&lt;h3 id=&quot;create-database&quot;&gt;Create database&lt;/h3&gt;

&lt;p&gt;Return to the discourse directory, and as the discourse user run:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;cd ~/discourse&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;createdb discourse&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;RUBY_GC_MALLOC_LIMIT=90000000 RAILS_ENV=production rake db:migrate&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;RUBY_GC_MALLOC_LIMIT=90000000 RAILS_ENV=production rake assets:precompile&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The precompile step can take several minutes without printing any output to the screen, so it may appear like the process has hung.&lt;/p&gt;

&lt;h3 id=&quot;fix-permissions&quot;&gt;Fix permissions&lt;/h3&gt;

&lt;p&gt;By default the webserver will not be able to access the discourse directory. To grant more broad permissions, run this as the discourse user:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;cd ~&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;chmod og+rx /home/discourse&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;Install and configure bluepill&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Bluepill is a process monitoring tool that Discourse uses to monitor itself. Install and configure it to start on boot:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;gem install bluepill&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;echo &amp;#39;alias bluepill=&amp;quot;NOEXEC_DISABLE=1 bluepill --no-privileged -c ~/.bluepill&amp;quot;&amp;#39; &amp;gt;&amp;gt; ~/.bash_profile&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;rvm wrapper $(rvm current) bootup bluepill&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;rvm wrapper $(rvm current) bootup bundle&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;run-discourse&quot;&gt;Run Discourse&lt;/h3&gt;

&lt;p&gt;Discourse is now ready to start up. To start Discourse, run:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;$ source /home/discourse/.rvm/scripts/rvm&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;RUBY_GC_MALLOC_LIMIT=90000000 RAILS_ROOT=/home/discourse/discourse RAILS_ENV=production UM_WEBS=2 bluepill --no-privileged -c ~/.bluepill load /home/discourse/discourse/config/discourse.pill&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You should also configure Discourse to start at bootup by adding this to the discourse user’s crontab. Open up your crontab for editing:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;crontab -e&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And paste the following line into the editor that pops up:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;@reboot RUBY_GC_MALLOC_LIMIT=90000000 RAILS_ROOT=/home/discourse/discourse RAILS_ENV=production NUM_WEBS=2 /home/discourse/.rvm/bin/bootup_bluepill --no-privileged -c ~/.bluepill load /home/discourse/discourse/config/discourse.pill&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Discourse is now running, but ngnix needs to be configured to forward requests to the running Discourse server before it will answer requests sent to your hostname.&lt;/p&gt;

&lt;h2 id=&quot;step-7-configure-ngnix&quot;&gt;Step 7: Configure ngnix&lt;/h2&gt;

&lt;p&gt;Now configure ngnix to point to the Discourse instance.&lt;/p&gt;

&lt;p&gt;Log back in and execute these commands as the local user, not as discourse.&lt;/p&gt;

&lt;h3 id=&quot;base-ngnix-configuration&quot;&gt;Base ngnix configuration&lt;/h3&gt;

&lt;p&gt;There’s a small change you’ll need to make to the configuration. Open the /etc/nginx/nginx.conf file:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;sudo vi /etc/nginx/nginx.conf&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Find the http section of the file and add the following line:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;server_names_hash_bucket_size 64;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;configure-nginx-for-discourse&quot;&gt;Configure nginx for Discourse&lt;/h3&gt;

&lt;p&gt;Discourse comes with an example nginx configuration file. Copy the example Discourse ngnix configuration to where ngnix expects it:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;sudo cp /home/discourse/discourse/config/nginx.sample.conf /etc/nginx/conf.d/discourse.conf&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;There are a few changes that need to be made to this file. Open the &lt;/p&gt;

&lt;p&gt;/etc/nginx/conf.d/discourse.conf’ file:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;sudo vi /etc/nginx/conf.d/discourse.conf&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;change-servername-to-your-hostname&quot;&gt;Change server_name to your hostname.&lt;/h3&gt;

&lt;p&gt;Change the socket paths to reflect where Discourse is installed. They should look like this:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;upstream discourse { &lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;   server unix:/home/discourse/discourse/tmp/sockets/thin.0.sock; &lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;   server unix:/home/discourse/discourse/tmp/sockets/thin.1.sock; &lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;   server unix:/home/discourse/discourse/tmp/sockets/thin.2.sock; &lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;   server unix:/home/discourse/discourse/tmp/sockets/thin.3.sock; &lt;/span&gt;
&lt;span class=&quot;x&quot;&gt; } &lt;/span&gt;
&lt;span class=&quot;x&quot;&gt; proxy_cache_path /var/nginx/cache keys_zone=one:512k max_size=200m;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Change the base path in the file. Look for a line with a path /var/www/discourse/public and replace this with our correct path, /home/discourse/discourse/public.&lt;/p&gt;

&lt;p&gt;Now stop httpd to free the 80 port and restart ngnix to pick up the configuration changes:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;sudo /etc/init.d/nginx stop&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;sudo fuser -k 80/tcp&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;sudo /etc/init.d/nginx start&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The stop command may fail if ngnix wasn’t currently running, but the start command should succeed.&lt;/p&gt;

&lt;p&gt;auto start nginx after boot:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;chkconfig nginx on&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;step-8-use-discourse&quot;&gt;Step 8: Use Discourse!&lt;/h2&gt;

&lt;p&gt;Discourse is now running and responding to requests at your hostname. The last thing you’ll need to do is set up an admin account to give you permission to administrate the Discourse instance.&lt;/p&gt;

&lt;h3 id=&quot;create-your-discourse-user&quot;&gt;Create your Discourse user&lt;/h3&gt;

&lt;p&gt;Open your Discourse website by navigating to your hostname in your webbrowser. Create a user account for yourself and make note of the email address with which you sign up.&lt;/p&gt;

&lt;h3 id=&quot;grant-yourself-administrative-priveleges&quot;&gt;Grant yourself administrative priveleges&lt;/h3&gt;

&lt;p&gt;Return back to your shell. Become the discourse user and bring up a rails console connected to the Discourse instance:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;cd ~/discourse&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;RAILS_ENV=production bundle exec rails c&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This will drop you into a Rails console where you can run commands. These commands will grant you administrative access; replace the email address with the email address you signed up with:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;me = User.find_by_username_or_email(&amp;#39;myemailaddress@me.com&amp;#39;)&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;me.activate&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;me.admin = true&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;me.save&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can also set this user as the default contact, as well:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;SiteSetting.site_contact_username = me.username&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Type exit to quit the Rails console.&lt;/p&gt;

&lt;p&gt;Verify you are now an administrator&lt;/p&gt;

&lt;p&gt;Return back to your Discourse instance in your webbrowser. If you’re not logged in as the account you signed up for, log back in. You will now be able to configure your Discourse instance to your liking.&lt;/p&gt;

&lt;p&gt;Congratulations! You’ve installed Discourse. Huzzah!&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;some-useful-commands-for-maintenance&quot;&gt;Some useful commands for maintenance&lt;/h2&gt;

&lt;h3 id=&quot;start-discourse&quot;&gt;Start discourse&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;RUBY_GC_MALLOC_LIMIT=90000000 RAILS_ROOT=/home/discourse/discourse RAILS_ENV=production NUM_WEBS=2 /home/discourse/.rvm/bin/bootup_bluepill --no-privileged -c ~/.bluepill load /home/discourse/discourse/config/discourse.pill&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;simple-script-to-update&quot;&gt;Simple script to update&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;#!/bin/bash&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;#Backup first, set the path to store backups &lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;DATESTAMP=$(TZ=UTC date +%F-%T)&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;pg_dump --no-owner --clean discourse | gzip -c &amp;gt; ~/discourse-db-$DATESTAMP.sql.gz&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;tar cfz ~/discourse-dir-$DATESTAMP.tar.gz -C /home/discourse discourse&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;# Update Discourse to master branch&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;git checkout master&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;git pull origin master&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;git fetch --tags&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;bundle install --without test --deployment&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;RUBY_GC_MALLOC_LIMIT=90000000 RAILS_ENV=production bundle exec rake db:migrate&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;RUBY_GC_MALLOC_LIMIT=90000000 RAILS_ENV=production bundle exec rake assets:precompile&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;RUBY_GC_MALLOC_LIMIT=90000000 RAILS_ROOT=/home/discourse/discourse RAILS_ENV=production NUM_WEBS=2 /home/discourse/.rvm/bin/bootup_bluepill --no-privileged -c ~/.bluepill load /home/discourse/discourse/config/discourse.pill&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Error fetching message: Error connecting to Redis on localhost:6379 (Errno::ECONNREFUSED)&lt;/p&gt;

&lt;p&gt;sudo service redis restart&lt;/p&gt;


  &lt;p&gt;&lt;a href=&quot;http://naiqus.github.io/install-discourse-on-1und1-vps/&quot;&gt;Install Discourse on 1und1 Virtual Server L Centos 6 x64&lt;/a&gt; was originally published by Naiqus at &lt;a href=&quot;http://naiqus.github.io&quot;&gt;Wake up, Naiqus!&lt;/a&gt; on June 18, 2015.&lt;/p&gt;</content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Using Discourse-API-Java in Android Studio]]></title>
  <link rel="alternate" type="text/html" href="http://naiqus.github.io/using-discourse-api-java-in-android-studio/" />
  <id>http://naiqus.github.io/using-discourse-api-java-in-android-studio</id>
  <published>2015-01-08T16:11:03+01:00</published>
  <updated>2015-01-08T16:11:03+01:00</updated>
  <author>
    <name>Naiqus</name>
    <uri>http://naiqus.github.io</uri>
    
  </author>
  <content type="html">&lt;p&gt;In my first Andriod project, an Discourse Android Client for my forum, I tried to use a open sourse library &lt;strong&gt;Discourse-API-Java&lt;/strong&gt; and met difficulties. After a few hours searching on the Internet, and some Adjustement on the source code It finally works.&lt;/p&gt;

&lt;p&gt;Discourse-API-Java is a Java encapsuled Discourse REST-API developed by &lt;a href=&quot;https://github.com/wareninja&quot;&gt;@Wareninja&lt;/a&gt;, hosted on &lt;a href=&quot;https://github.com/wareninja/discourse-api-client&quot;&gt;Github&lt;/a&gt;. It should work flawlessly on Android as I read through the sourse code and it description also declaimed that. The source code is pretty simple and very easy to read.  &lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;works also on Android platform!
Goal is to implement simple &amp;amp; readable Java code, reusable to communicate with Discourse API endpoints.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;adding-dependencies&quot;&gt;Adding Dependencies:&lt;/h3&gt;
&lt;p&gt;The module depends on &lt;code&gt;org.apache.httpcomponents:httpclient-android:4.3.5&lt;/code&gt; and if use source code directly, then &lt;code&gt;com.google.code.gson:gson:2.3.1&lt;/code&gt; is needed. They could be added in File-&amp;gt;Project Structure-&amp;gt;Dependencies. Just search for the libs and add them. After the gradle sync, it is recommended to clean the project once (by me). &lt;/p&gt;

&lt;h3 id=&quot;some-issues&quot;&gt;Some issues&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;It can not be directly used in Android Studio. The App will crash after lauch due to the error: &lt;code&gt;java.lang.IllegalArgumentException: Item may not be null&lt;/code&gt;. When digging into the source code of HttpClient, It turns out that the SSL SocketFactory is not initialized when creating the CloseableHttpResponse object. Therefore, the Discourse-API-Java project need to be forked and import it manually. 
  What should be modified is in the MyWebClient.java. In the initBase() method, an initalization of SSLConnectionSoketFactory should be added. &lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//SSLConnectionSocketFactory initialized.&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;SSLContext&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sslContext&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SSLContexts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;createSystemDefault&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;SSLConnectionSocketFactory&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sslsf&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SSLConnectionSocketFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;sslContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;SSLConnectionSocketFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;STRICT_HOSTNAME_VERIFIER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;httpClient&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HttpClientBuilder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
                   &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setSSLSocketFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sslsf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                   &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;Some method are not recognized like &lt;code&gt;.setConfig&lt;/code&gt; of HttpPost, HttpGet, etc. I have no idea about it. I haven’t find official document explaining this for the HttpClient Android 3.5 and all the old API documentations included this method. It’s odd. Since it is not very important, I commentted them out temporally.&lt;/li&gt;
  &lt;li&gt;In my HttpClient library, the StringEntity class doesn’t have a constructor which takes String and ContentType as parameter. You could only init it with data content and charset. However the content type is required. So they are added manually use &lt;code&gt;setHeader()&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;requestEntity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;StringEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jsonBodyStr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;UTF-8&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;httpPost&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;requestEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;httpPost&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setHeader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Content-type&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;application/json&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;httpPost&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jsonBodyStr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UnsupportedEncodingException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;printStackTrace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;finally-works&quot;&gt;Finally works&lt;/h3&gt;

&lt;p&gt;Invoke it inside a AsyncTask and finally that’s it. It really takes me a few hours to debug it. &lt;/p&gt;

&lt;p&gt;Here’s an example:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DiscourseAPIRequest&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AsyncTask&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Void&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Void&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Void&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;doInBackground&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Void&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;//test Discourse API&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DiscourseApiClient&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mDiscourseClient&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;DiscourseApiClient&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;&amp;quot;YourHostName&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;&amp;quot;YourApiKey&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;&amp;quot;YourApiKeyUsername&amp;quot;&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;



            &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test_username&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;TestUsername&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test_password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;TestUserPassword&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;ResponseModel&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;responseModel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

            &lt;span class=&quot;n&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;param&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HashMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;();&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;param&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;login&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;test_username&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;param&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;password&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;test_password&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;responseModel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mDiscourseClient&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;loginUser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;param&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;DisourseAPI&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;responseModel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;A more detailed example check &lt;a href=&quot;https://github.com/wareninja/discourse-api-client/blob/master/src/ExampleUsage.java&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here is&lt;a href=&quot;https://github.com/Naiqus/discourse-api-client&quot;&gt; my fork &lt;/a&gt;of this project.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://naiqus.github.io/using-discourse-api-java-in-android-studio/&quot;&gt;Using Discourse-API-Java in Android Studio&lt;/a&gt; was originally published by Naiqus at &lt;a href=&quot;http://naiqus.github.io&quot;&gt;Wake up, Naiqus!&lt;/a&gt; on January 08, 2015.&lt;/p&gt;</content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Wechat MP for Discourse Forum]]></title>
  <link rel="alternate" type="text/html" href="http://naiqus.github.io/wechat-mp-for-discourse-development/" />
  <id>http://naiqus.github.io/wechat-mp-for-discourse-development</id>
  <published>2014-12-31T13:35:25+01:00</published>
  <updated>2014-12-31T13:35:25+01:00</updated>
  <author>
    <name>Naiqus</name>
    <uri>http://naiqus.github.io</uri>
    
  </author>
  <content type="html">&lt;p&gt;Wechat is the most popular IM App nowadays in China. The Wechat MP could deliver various functions to Wechat users with its Developer API. &lt;/p&gt;

&lt;p&gt;Recently I registered a Wechat MP for my Discourse forum &lt;a href=&quot;www.e1zone.de&quot;&gt;E1zone&lt;/a&gt; and developed some server-side functions to fetch users’ information from the Discourse forum. This post includes the procedure of the implementation and some notes of technical details.&lt;/p&gt;

&lt;p&gt;The code is now hosted in Github: &lt;a href=&quot;https://github.com/Naiqus/discourse-wechat-mp&quot;&gt;discourse-wechat-mp&lt;/a&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;The implemented functions:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;reply “?” to check usage.&lt;/li&gt;
  &lt;li&gt;reply “最新” to get weekly highlights list &lt;/li&gt;
  &lt;li&gt;reply “绑定” to bind Discourse account to Wechat account&lt;/li&gt;
  &lt;li&gt;reply “解除绑定” to unbind.&lt;/li&gt;
  &lt;li&gt;reply “消息” to check recent forum notifications.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;section id=&quot;table-of-contents&quot; class=&quot;toc&quot;&gt;
  &lt;header&gt;
    &lt;h3&gt;Overview&lt;/h3&gt;
  &lt;/header&gt;
&lt;div id=&quot;drawer&quot;&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#binding-wechat-openid-to-discourse-user-account&quot;&gt;Binding Wechat OpenID to Discourse User Account&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#highlights-of-the-implementation&quot;&gt;Highlights of The Implementation.&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#discourse-api-called-to-fetch-user-notifications&quot;&gt;Discourse API called to fetch user notifications&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#fetching-and-analyse-json-data-with-php&quot;&gt;Fetching and Analyse Json Data with PHP&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#function-overloading-in-php&quot;&gt;Function Overloading in PHP&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#use-sprintf-to-get-pre-defined-string-from-template&quot;&gt;Use sprintf() to get pre-defined string from template&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#connect-to-mysql-in-php&quot;&gt;Connect to MySQL in PHP&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#verify-strings-format&quot;&gt;Verify String’s Format&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#basic-php-form&quot;&gt;Basic PHP form&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

  &lt;/div&gt;
&lt;/section&gt;

&lt;h2 id=&quot;binding-wechat-openid-to-discourse-user-account&quot;&gt;Binding Wechat OpenID to Discourse User Account&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Store Discourse user API key, identification code and username in a database.&lt;/li&gt;
  &lt;li&gt;discourse user request for the API key&lt;strong&gt;—&amp;gt;&lt;/strong&gt; &lt;/li&gt;
  &lt;li&gt;Administrators generate user API key &lt;strong&gt;—&amp;gt;&lt;/strong&gt; &lt;/li&gt;
  &lt;li&gt;Insert the entry which contains information of api_key，Discourse username，and identification code.&lt;strong&gt;—&amp;gt;&lt;/strong&gt; &lt;/li&gt;
  &lt;li&gt;send Wechat identification code to user&lt;strong&gt;—&amp;gt;&lt;/strong&gt; &lt;/li&gt;
  &lt;li&gt;Detect identification code from user reply &lt;strong&gt;—&amp;gt;&lt;/strong&gt; &lt;/li&gt;
  &lt;li&gt;validate the code, update database, add user’s wechat OpenID.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;highlights-of-the-implementation&quot;&gt;Highlights of The Implementation.&lt;/h2&gt;

&lt;h3 id=&quot;discourse-api-called-to-fetch-user-notifications&quot;&gt;Discourse API called to fetch user notifications&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;curl http://localhost:3000/notifications.json?api_key=test_d7fd0429940&amp;amp;api_username=test_user&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;fetching-and-analyse-json-data-with-php&quot;&gt;Fetching and Analyse Json Data with PHP&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;$json_url = &amp;quot;http://www.e1zone.de/top/weekly.json&amp;quot;; //weekly highlights &lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    $json = file_get_contents($json_url);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    if ($json != null){&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;        $weekly = json_decode($json);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    } else{&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;        throw new Exception(&amp;quot;Error Json Request&amp;quot;, 1);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;function-overloading-in-php&quot;&gt;Function Overloading in PHP&lt;/h3&gt;
&lt;p&gt;Define a function with no parameter:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;function db_operation(){&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;	//--------------------------binding account&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;	if (func_get_arg(0) == &amp;quot;bind&amp;quot;) { //check the first param&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;	    $apikey = func_get_arg(1);  //second&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;		$fromUsername = func_get_arg(2);  //third&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;				&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;				...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;use-sprintf-to-get-pre-defined-string-from-template&quot;&gt;Use sprintf() to get pre-defined string from template&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;$textTpl = &amp;quot;&amp;lt;xml&amp;gt;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;            &amp;lt;ToUserName&amp;gt;&amp;lt;![CDATA[%s]]&amp;gt;&amp;lt;/ToUserName&amp;gt;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;            &amp;lt;FromUserName&amp;gt;&amp;lt;![CDATA[%s]]&amp;gt;&amp;lt;/FromUserName&amp;gt;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;            &amp;lt;CreateTime&amp;gt;%s&amp;lt;/CreateTime&amp;gt;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;            &amp;lt;MsgType&amp;gt;&amp;lt;![CDATA[%s]]&amp;gt;&amp;lt;/MsgType&amp;gt;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;            &amp;lt;Content&amp;gt;&amp;lt;![CDATA[%s]]&amp;gt;&amp;lt;/Content&amp;gt;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;            &amp;lt;FuncFlag&amp;gt;0&amp;lt;/FuncFlag&amp;gt;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;            &amp;lt;/xml&amp;gt;&amp;quot;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;            &lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;$resultStr .= sprintf($textTpl, $fromUsername, $toUsername, time(), $msgType, $text);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;connect-to-mysql-in-php&quot;&gt;Connect to MySQL in PHP&lt;/h3&gt;
&lt;p&gt;This is not a quite up-to-dated way:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;$connecTtion =mysql_connect($db_servername, $db_username, $db_password) OR DIE (&amp;quot;Unable to connect to database! Please try again later.&amp;quot;);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;if (!$connection){&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;	$output = &amp;quot;服务器异常，请稍后重试。&amp;quot;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;}else{&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;	mysql_select_db(&amp;quot;discourseUsers&amp;quot;);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;	// select operations&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;	//check if this user has already binded to an account&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    $sql = &amp;quot;SELECT `openID`,`username` FROM `account_binding` WHERE `openID` = &amp;#39;&amp;quot;.$fromUsername.&amp;quot;&amp;#39;;&amp;quot;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;	$result = mysql_query($sql);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;	if (mysql_num_rows($result) &amp;gt; 0) {  &lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;		$record = mysql_fetch_array($result);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;		$output = $record[&amp;quot;username&amp;quot;];&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;		mysql_close($connection);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;		return $output;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It is better to use mysqli() instead:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;$servername = &amp;quot;localhost&amp;quot;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;$username = &amp;quot;username&amp;quot;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;$password = &amp;quot;password&amp;quot;;&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;// Create connection&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;$conn = new mysqli($servername, $username, $password);&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;// Check connection&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;if ($conn-&amp;gt;connect_error) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    die(&amp;quot;Connection failed: &amp;quot; . $conn-&amp;gt;connect_error);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;} &lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;echo &amp;quot;Connected successfully&amp;quot;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;Note on the object-oriented example above: $connect_error was broken until PHP 5.2.9 and 5.3.0. If you need to ensure compatibility with PHP versions prior to 5.2.9 and 5.3.0, use the following code instead:
&lt;em&gt;// Check connection
if (mysqli_connect_error()) {
    die(“Database connection failed: “ . mysqli_connect_error());
}&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;verify-strings-format&quot;&gt;Verify String’s Format&lt;/h3&gt;
&lt;p&gt;Use function “&lt;strong&gt;preg_match(pattern,variable)&lt;/strong&gt;”
` if (preg_match(“/[A-Za-z0-9]+/”, $form_Content) &amp;amp;&amp;amp; strlen($form_Content) == 8) { …} `
The example here checks whether the $form_Content contains only letters and numbers and the length of the string is exactly 8. 
It is used to detect the identification code. It is better to have user operation state stored in the server-side. However, taken the Chinese’s input habit into account, it is feasible. It is really rare to have a reply which contains only letters and numbers from a Chinese user.&lt;/p&gt;

&lt;h3 id=&quot;basic-php-form&quot;&gt;Basic PHP form&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Check user’s input:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;// define variables and set to empty values&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;$username = $api = $userbindingkey = &amp;quot;&amp;quot;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;$usernameErr = $apiErr = $userbindingkeyErr = &amp;quot;&amp;quot;;&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;if ($_SERVER[&amp;quot;REQUEST_METHOD&amp;quot;] == &amp;quot;POST&amp;quot;) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  if (empty($_POST[&amp;quot;username&amp;quot;])) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $usernameErr = &amp;quot;Username 是必填的&amp;quot;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  } else {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    $username = test_input($_POST[&amp;quot;username&amp;quot;]);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  }&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;x&quot;&gt; ...&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;function test_input($data) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    $data = trim($data);   //remove spaces&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    $data = stripslashes($data); //remove slashes&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    $data = htmlspecialchars($data); // translate special characters for security reason&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    return $data;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The form is written as following:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;form&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;method=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;post&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;action=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&amp;lt;?php echo htmlspecialchars($_SERVER[&amp;quot;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;PHP_SELF&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;quot;]);?&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;&amp;quot;&amp;gt; 
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;username&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;placeholder=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;输入用户名&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;input-xlarge&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;error&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;* &lt;span class=&quot;cp&quot;&gt;&amp;lt;?php echo $usernameErr;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;api&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;api&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;placeholder=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;API_key&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;input-xlarge&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;onkeyup=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;keyupFunction()&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;error&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;* &lt;span class=&quot;cp&quot;&gt;&amp;lt;?php echo $apiErr;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Button --&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;confirm&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;confirm&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;btn btn-success&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;submit&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;确定&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;form submit to the page self, in order to show the info in the same page:
&lt;code&gt;&amp;lt;form method=&quot;post&quot; action=&quot;&amp;lt;?php echo htmlspecialchars($_SERVER[&quot;PHP_SELF&quot;]);?&amp;gt;&quot;&amp;gt; &lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;When user release a key while input, call a function
&lt;code&gt;onkeyup=&quot;keyupFunction()&quot;&lt;/code&gt;
Following is the function in JS:&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;keyupFunction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;api&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;api&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;apilast8&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;api&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//last 8 letters&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;userbindingkey&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;apilast8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

  &lt;p&gt;&lt;a href=&quot;http://naiqus.github.io/wechat-mp-for-discourse-development/&quot;&gt;Wechat MP for Discourse Forum&lt;/a&gt; was originally published by Naiqus at &lt;a href=&quot;http://naiqus.github.io&quot;&gt;Wake up, Naiqus!&lt;/a&gt; on December 31, 2014.&lt;/p&gt;</content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Eclipse Grafiti Learning Notes]]></title>
  <link rel="alternate" type="text/html" href="http://naiqus.github.io/eclipse-grafiti-notes/" />
  <id>http://naiqus.github.io/eclipse-grafiti-notes</id>
  <published>2014-11-10T01:39:07+01:00</published>
  <updated>2014-11-10T01:39:07+01:00</updated>
  <author>
    <name>Naiqus</name>
    <uri>http://naiqus.github.io</uri>
    
  </author>
  <content type="html">&lt;section id=&quot;table-of-contents&quot; class=&quot;toc&quot;&gt;
  &lt;header&gt;
    &lt;h3&gt;Overview&lt;/h3&gt;
  &lt;/header&gt;
&lt;div id=&quot;drawer&quot;&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#introduction&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#installation&quot;&gt;Installation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#need-to-kown&quot;&gt;Need to kown&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#architecture&quot;&gt;Architecture:&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#hands-on-a-simple-example&quot;&gt;Hands-on: A simple example&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#plug-in-structure&quot;&gt;Plug-In structure:&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#create-plug-in&quot;&gt;1. Create Plug-in&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#diagram-type-agent&quot;&gt;2. Diagram Type Agent&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#create-a-diagram-type-provider&quot;&gt;Create a Diagram Type Provider&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#create-a-new-diagram-type-of-the-provider&quot;&gt;Create a new Diagram Type of the Provider&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#create-a-feature-provider&quot;&gt;Create a Feature Provider&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

  &lt;/div&gt;
&lt;/section&gt;
&lt;!-- /#table-of-contents --&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;It is immediately noticeable, that GEF is fairly complex and it needs a notable amount of work to get used to the framework. Therefore, and also to homogenize their tooling, SAP built a framework that hides GEF’s complexities from the developer and bridges EMF and GEF to ease and speed up the development of graphical editors. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;installation&quot;&gt;Installation&lt;/h2&gt;
&lt;p&gt;The installation source of the updatest release is included in the official release update channel. Install the “Graphiti SDK Plus” which includes a tutorial in the help document.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;need-to-kown&quot;&gt;Need to kown&lt;/h2&gt;

&lt;h3 id=&quot;architecture&quot;&gt;Architecture:&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/grafiti-architecture.png&quot; alt=&quot;Basic Architecture&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Interaction Component&lt;/strong&gt;: deal with the requests of input (from mouse, keyboard), like click, drag-and-drop, etc. Passing them to Diagram Type Agent. &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Rendering Engine&lt;/strong&gt;: to display the current data on the screen. Based on GEF in conjuction with Draw2d.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Diagram Type Agent&lt;/strong&gt;: has to be implemented by developer and could make use of a lot of services as well as standard implementations. With these implementations (Actions like &lt;em&gt;move, resize, delete, remove and print&lt;/em&gt;), one can build a functional editor very quickly. It could also be incrementally implemented in the further development. The major task of Diagram Type Agent is to modify the model data. Servaral models are applied there as follows:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;Domain Model&lt;/strong&gt;: contains the model which needs to be graphically displayed. A &lt;em&gt;.ecore&lt;/em&gt; model for example could be used here. In Graphiti, the data of Domain model is called &lt;strong&gt;Business Objects&lt;/strong&gt;.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Protogram Model&lt;/strong&gt;: ? contains all the information for displaying a diagram. Needs some redundant storage of data. Not quite clear. complish this part late.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Link Model&lt;/strong&gt;: the relation between Domain Model and Protogram Model. Connecting data from Domain Model to the graphical representation from Protogram Model. This is necessory for some actions on the editor, like moving and deleting objects, which changes data of Domain Model as well.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Example: User clicks on a kind of “Create” tool on the tools palette and draws a rectangle in the editor which indicates a rectangle object with the specified size and position should be created. Then the Diagram Type Agent act as following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Create a new object in the Domain Model,&lt;/li&gt;
  &lt;li&gt;Create the graphical visualization in the Pictogram Model. E.g. create Graphics Algorithms like a Rounded Rectangle. Initial them with colors and fonts and the layout.&lt;/li&gt;
  &lt;li&gt;Create link between the Pictogram Model and Domain Model.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/diagram-type-agent-new.png&quot; alt=&quot;Inside Diagram Type Agent&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features&lt;/strong&gt; are needed from developers like operations. &lt;strong&gt;Feature Provider&lt;/strong&gt; supplies the needed features. Processing the features leads to modifing the datas in the models. &lt;em&gt;*Diagram Type Provider&lt;/em&gt; handels the requests from interactive components. It also decides when to synchronise the Domain and Pictogram Models.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;Diagram Type Agent&lt;/strong&gt; is implemented in 4 steps:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Implement a &lt;em&gt;Diagram Type Provider&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Register it for a new &lt;em&gt;Diagram Type&lt;/em&gt;.&lt;/li&gt;
  &lt;li&gt;Create a &lt;em&gt;Feature Provider&lt;/em&gt;.&lt;/li&gt;
  &lt;li&gt;Create Feature, for example: &lt;em&gt;Add Feature&lt;/em&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;hands-on-a-simple-example&quot;&gt;Hands-on: A simple example&lt;/h2&gt;

&lt;p&gt;Get familier with the Graphiti plugin development procedure with help of the official tutorial, step by step.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;plug-in-structure&quot;&gt;Plug-In structure:&lt;/h3&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;strong&gt;org.eclipse.graphiti&lt;/strong&gt;
&lt;em&gt;The UI platform independent part of the framework&lt;/em&gt;&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;org.eclipse.graphiti.ui&lt;/strong&gt;
&lt;em&gt;The UI platform dependent part of the framework&lt;/em&gt;&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;org.eclipse.graphiti.mm&lt;/strong&gt;
&lt;em&gt;The Graphiti EMF model&lt;/em&gt;&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;org.eclipse.graphiti.pattern&lt;/strong&gt;
&lt;em&gt;Additional Graphiti framework for an alternative approach to combine all implementation aspects in one pattern instead of spreading accross several features.&lt;/em&gt;&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;org.eclipse.graphiti.export.batik&lt;/strong&gt;
&lt;em&gt;The framework export functionality, e.g. save as SVG (using Batik functionality)&lt;/em&gt;&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;org.eclipse.graphiti.doc&lt;/strong&gt;
&lt;em&gt;The Eclipse help content, e.g. the Graphiti tutorial&lt;/em&gt;&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;org.eclipse.graphiti.examples.common&lt;/strong&gt;
&lt;em&gt;General parts of samples and test tools for Graphiti; helper UIs, e.g. repository explorer and wizard (contains exemplary coding that cannot be re-used from within tools build on top of Graphiti)&lt;/em&gt;&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;org.eclipse.graphiti.examples.tutorial&lt;/strong&gt;
&lt;em&gt;The final implementation of the Graphiti tutorial&lt;/em&gt;&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;org.eclipse.graphiti.ui.capabilities&lt;/strong&gt;
&lt;em&gt;A small example showing how the Eclipse capabilities mechanism can be used with Graphiti&lt;/em&gt;&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;org.eclipse.graphiti.feature&lt;/strong&gt;
&lt;em&gt;The feature containing purely the Graphiti framework without any additional functionality like SVG export. This feature needs to be included into Eclipse installations containing tools build on top of Graphiti&lt;/em&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;create-plug-in&quot;&gt;1. Create Plug-in&lt;/h3&gt;

&lt;p&gt;Create a blank plug-in project using new project wizard. Add following dependencies :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;org.eclipse.graphiti&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;org.eclipse.graphiti.ui&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;org.eclipse.graphiti.examples.common&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;org.eclipse.core.resources&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;org.eclipse.core.runtime&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;org.eclipse.ui.views.properties.tabbed&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;diagram-type-agent&quot;&gt;2. Diagram Type Agent&lt;/h3&gt;

&lt;p&gt;A &lt;strong&gt;diagram type agent&lt;/strong&gt; should be implemented for creation of an editor of a viewer. As mentioned before, it consists of a &lt;strong&gt;diagram type provider&lt;/strong&gt; and a &lt;strong&gt;feature provider&lt;/strong&gt;&lt;/p&gt;

&lt;h4 id=&quot;create-a-diagram-type-provider&quot;&gt;Create a Diagram Type Provider&lt;/h4&gt;

&lt;p&gt;Add a new package according to the project, create a new class extend the base class &lt;em&gt;AbstractDiagramTypeProvider&lt;/em&gt; in oder to implement the interface &lt;em&gt;iDiagramTypeProvider&lt;/em&gt;.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rwth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ice&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;graphiti&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;helloworld&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;diagram&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.eclipse.graphiti.dt.AbstractDiagramTypeProvider&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HelloDiagramTypeProvider&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AbstractDiagramTypeProvider&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;HelloDiagramTypeProvider&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Add a new extension using the extension tab within MANIFEST.MF editor with the extension point &lt;strong&gt;&lt;em&gt;org.eclipse.graphiti.ui.diagramTypeProviders&lt;/em&gt;&lt;/strong&gt;. Set the corresponding ID, name, and set the class to the just created one.&lt;/p&gt;

&lt;h4 id=&quot;create-a-new-diagram-type-of-the-provider&quot;&gt;Create a new Diagram Type of the Provider&lt;/h4&gt;

&lt;p&gt;Add a new Diagram Type with extension point &lt;strong&gt;&lt;em&gt;org.eclipse.graphiti.ui.diagramTypes&lt;/em&gt;&lt;/strong&gt;, set its ID, name and save it. Right click on the &lt;strong&gt;&lt;em&gt;Diagram Type Provider&lt;/em&gt;&lt;/strong&gt; extension in the list and add a Diagram Type, choose the Diagram type just created.&lt;/p&gt;

&lt;p&gt;After these steps, the plugin.xml file should looks like this:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;&amp;lt;?eclipse version=&amp;quot;3.4&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;&amp;lt;extension&lt;/span&gt;
         &lt;span class=&quot;na&quot;&gt;point=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;org.eclipse.graphiti.ui.diagramTypes&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;diagramType&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;de.rwth-aachen.ice.graphiti.helloworld.hellodiagramtype&amp;quot;&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;hello diagramtype&amp;quot;&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Helloworld&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/diagramType&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;&amp;lt;/extension&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;&amp;lt;extension&lt;/span&gt;
         &lt;span class=&quot;na&quot;&gt;point=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;org.eclipse.graphiti.ui.diagramTypeProviders&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;diagramTypeProvider&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;rwth.ice.graphiti.helloworld.diagram.HelloDiagramTypeProvider&amp;quot;&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;context=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;org.eclipse.graphiti.ui.diagramEditor&amp;quot;&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;de.rwth-aachen.ice.graphiti.helloworld.HelloDiagramTypeProvider&amp;quot;&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;My first Diagram Type Provider&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
         &lt;span class=&quot;nt&quot;&gt;&amp;lt;diagramType&lt;/span&gt;
               &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;de.rwth-aachen.ice.graphiti.helloworld.hellodiagramtype&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
         &lt;span class=&quot;nt&quot;&gt;&amp;lt;/diagramType&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/diagramTypeProvider&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;&amp;lt;/extension&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/plugin&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;create-a-feature-provider&quot;&gt;Create a Feature Provider&lt;/h4&gt;

&lt;p&gt;Create a now class extends &lt;strong&gt;&lt;em&gt;DefaultFeatureProvider&lt;/em&gt;&lt;/strong&gt; in oder to implement the &lt;em&gt;IFeatureProvider&lt;/em&gt; interface. Initially, we don’t need to overwrite any methods.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rwth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ice&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;graphiti&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;helloworld&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;diagram&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.eclipse.graphiti.dt.IDiagramTypeProvider&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.eclipse.graphiti.ui.features.DefaultFeatureProvider&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HelloFeatureProvider&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DefaultFeatureProvider&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;HelloFeatureProvider&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IDiagramTypeProvider&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dtp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dtp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We need to create and set it in the construction of Diagram Type Provider as well. Add one line in the construction of DiagramTypeProvider:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;HelloDiagramTypeProvider&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;setFeatureProvider&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;HelloFeatureProvider&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


  &lt;p&gt;&lt;a href=&quot;http://naiqus.github.io/eclipse-grafiti-notes/&quot;&gt;Eclipse Grafiti Learning Notes&lt;/a&gt; was originally published by Naiqus at &lt;a href=&quot;http://naiqus.github.io&quot;&gt;Wake up, Naiqus!&lt;/a&gt; on November 10, 2014.&lt;/p&gt;</content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Hello World, again!]]></title>
  <link rel="alternate" type="text/html" href="http://naiqus.github.io/hello-world-again/" />
  <id>http://naiqus.github.io/hello-world-again</id>
  <published>2014-11-08T15:50:00+01:00</published>
  <updated>2014-11-08T15:50:00+01:00</updated>
  <author>
    <name>Naiqus</name>
    <uri>http://naiqus.github.io</uri>
    
  </author>
  <content type="html">&lt;p&gt;Yes, I just deployed a brand new blog. All the previous stuff is gone, although there was basically nothing over there.&lt;/p&gt;

&lt;p&gt;Learning to program by oneself is not quite a easy job for a lazzzzzy man. This blog is a good evidence.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://naiqus.github.io/hello-world-again/&quot;&gt;Hello World, again!&lt;/a&gt; was originally published by Naiqus at &lt;a href=&quot;http://naiqus.github.io&quot;&gt;Wake up, Naiqus!&lt;/a&gt; on November 08, 2014.&lt;/p&gt;</content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Sample Post]]></title>
  <link rel="alternate" type="text/html" href="http://naiqus.github.io/sample-post/" />
  <id>http://naiqus.github.io/sample-post</id>
  <updated>2013-05-31T00:00:00-00:00</updated>
  <published>2011-03-10T00:00:00+01:00</published>
  
  <author>
    <name>Naiqus</name>
    <uri>http://naiqus.github.io</uri>
    
  </author>
  <content type="html">&lt;section id=&quot;table-of-contents&quot; class=&quot;toc&quot;&gt;
  &lt;header&gt;
    &lt;h3&gt;Overview&lt;/h3&gt;
  &lt;/header&gt;
&lt;div id=&quot;drawer&quot;&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#html-elements&quot;&gt;HTML Elements&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#heading-1&quot;&gt;Heading 1&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#heading-2&quot;&gt;Heading 2&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#heading-3&quot;&gt;Heading 3&lt;/a&gt;            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;#heading-4&quot;&gt;Heading 4&lt;/a&gt;                &lt;ul&gt;
                  &lt;li&gt;&lt;a href=&quot;#heading-5&quot;&gt;Heading 5&lt;/a&gt;                    &lt;ul&gt;
                      &lt;li&gt;&lt;a href=&quot;#heading-6&quot;&gt;Heading 6&lt;/a&gt;&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#body-text&quot;&gt;Body text&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#blockquotes&quot;&gt;Blockquotes&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#list-types&quot;&gt;List Types&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#ordered-lists&quot;&gt;Ordered Lists&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#unordered-lists&quot;&gt;Unordered Lists&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#tables&quot;&gt;Tables&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#code-snippets&quot;&gt;Code Snippets&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#buttons&quot;&gt;Buttons&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#notices&quot;&gt;Notices&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

  &lt;/div&gt;
&lt;/section&gt;
&lt;!-- /#table-of-contents --&gt;

&lt;h2 id=&quot;html-elements&quot;&gt;HTML Elements&lt;/h2&gt;

&lt;p&gt;Below is just about everything you’ll need to style in the theme. Check the source code to see the many embedded elements within paragraphs.&lt;/p&gt;

&lt;h1 id=&quot;heading-1&quot;&gt;Heading 1&lt;/h1&gt;

&lt;h2 id=&quot;heading-2&quot;&gt;Heading 2&lt;/h2&gt;

&lt;h3 id=&quot;heading-3&quot;&gt;Heading 3&lt;/h3&gt;

&lt;h4 id=&quot;heading-4&quot;&gt;Heading 4&lt;/h4&gt;

&lt;h5 id=&quot;heading-5&quot;&gt;Heading 5&lt;/h5&gt;

&lt;h6 id=&quot;heading-6&quot;&gt;Heading 6&lt;/h6&gt;

&lt;h3 id=&quot;body-text&quot;&gt;Body text&lt;/h3&gt;

&lt;p&gt;Lorem ipsum dolor sit amet, test link adipiscing elit. &lt;strong&gt;This is strong&lt;/strong&gt;. Nullam dignissim convallis est. Quisque aliquam.&lt;/p&gt;

&lt;p class=&quot;image-pull-right&quot;&gt;&lt;img src=&quot;http://naiqus.github.io/images/3953273590_704e3899d5_m.jpg&quot; alt=&quot;Smithsonian Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This is emphasized&lt;/em&gt;. Donec faucibus. Nunc iaculis suscipit dui. 53 = 125. Water is H2O. Nam sit amet sem. Aliquam libero nisi, imperdiet at, tincidunt nec, gravida vehicula, nisl. The New York Times (That’s a citation). Underline.Maecenas ornare tortor. Donec sed tellus eget sapien fringilla nonummy. Mauris a ante. Suspendisse quam sem, consequat at, commodo vitae, feugiat in, nunc. Morbi imperdiet augue quis tellus.&lt;/p&gt;

&lt;p&gt;HTML and CSS are our tools. Mauris a ante. Suspendisse quam sem, consequat at, commodo vitae, feugiat in, nunc. Morbi imperdiet augue quis tellus. Praesent mattis, massa quis luctus fermentum, turpis mi volutpat justo, eu volutpat enim diam eget metus.&lt;/p&gt;

&lt;h3 id=&quot;blockquotes&quot;&gt;Blockquotes&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;Lorem ipsum dolor sit amet, test link adipiscing elit. Nullam dignissim convallis est. Quisque aliquam.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;list-types&quot;&gt;List Types&lt;/h2&gt;

&lt;h3 id=&quot;ordered-lists&quot;&gt;Ordered Lists&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Item one
    &lt;ol&gt;
      &lt;li&gt;sub item one&lt;/li&gt;
      &lt;li&gt;sub item two&lt;/li&gt;
      &lt;li&gt;sub item three&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;Item two&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;unordered-lists&quot;&gt;Unordered Lists&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Item one&lt;/li&gt;
  &lt;li&gt;Item two&lt;/li&gt;
  &lt;li&gt;Item three&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;tables&quot;&gt;Tables&lt;/h2&gt;

&lt;table rules=&quot;groups&quot;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Header1&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Header2&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;Header3&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;cell1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;cell2&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;cell3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;cell4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;cell5&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;cell6&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;cell1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;cell2&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;cell3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;cell4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;cell5&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;cell6&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
  &lt;tfoot&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Foot1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Foot2&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;Foot3&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tfoot&gt;
&lt;/table&gt;

&lt;h2 id=&quot;code-snippets&quot;&gt;Code Snippets&lt;/h2&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nf&quot;&gt;#container&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;-240px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;buttons&quot;&gt;Buttons&lt;/h2&gt;

&lt;p&gt;Make any link standout more when applying the &lt;code&gt;.btn&lt;/code&gt; class.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;#&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;btn btn-success&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Success Button&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div&gt;&lt;a href=&quot;#&quot; class=&quot;btn&quot;&gt;Primary Button&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;a href=&quot;#&quot; class=&quot;btn btn-success&quot;&gt;Success Button&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;a href=&quot;#&quot; class=&quot;btn btn-warning&quot;&gt;Warning Button&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;a href=&quot;#&quot; class=&quot;btn btn-danger&quot;&gt;Danger Button&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;a href=&quot;#&quot; class=&quot;btn btn-info&quot;&gt;Info Button&lt;/a&gt;&lt;/div&gt;

&lt;h2 id=&quot;notices&quot;&gt;Notices&lt;/h2&gt;

&lt;p class=&quot;notice&quot;&gt;&lt;strong&gt;Watch out!&lt;/strong&gt; You can also add notices by appending &lt;code&gt;{: .notice}&lt;/code&gt; to a paragraph.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://naiqus.github.io/sample-post/&quot;&gt;Sample Post&lt;/a&gt; was originally published by Naiqus at &lt;a href=&quot;http://naiqus.github.io&quot;&gt;Wake up, Naiqus!&lt;/a&gt; on March 10, 2011.&lt;/p&gt;</content>
</entry>

</feed>
