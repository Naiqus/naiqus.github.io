<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
<title type="text">Wake up, Naiqus!</title>
<generator uri="https://github.com/jekyll/jekyll">Jekyll</generator>
<link rel="self" type="application/atom+xml" href="http://naiqus.github.io/feed.xml" />
<link rel="alternate" type="text/html" href="http://naiqus.github.io" />
<updated>2014-12-31T14:32:32+01:00</updated>
<id>http://naiqus.github.io/</id>
<author>
  <name>Naiqus</name>
  <uri>http://naiqus.github.io/</uri>
  
</author>


  

<entry>
  <title type="html"><![CDATA[Wechat MP for Discourse Forum]]></title>
  <link rel="alternate" type="text/html" href="http://naiqus.github.io/wechat-mp-for-discourse-development/" />
  <id>http://naiqus.github.io/wechat-mp-for-discourse-development</id>
  <published>2014-12-31T13:35:25+01:00</published>
  <updated>2014-12-31T13:35:25+01:00</updated>
  <author>
    <name>Naiqus</name>
    <uri>http://naiqus.github.io</uri>
    
  </author>
  <content type="html">&lt;p&gt;Wechat is the most popular IM App nowadays in China. The Wechat MP could deliver various functions to Wechat users with its Developer API. &lt;/p&gt;

&lt;p&gt;Recently I registered a Wechat MP for my Discourse forum &lt;a href=&quot;www.e1zone.de&quot;&gt;E1zone&lt;/a&gt; and developed some the server-side functions for it in order to fetch users’ own informations from the Discourse forum. This post includes the basic principle of the implementation and some notes of technical details.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;The implemented functions of the Wechat MP:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;reply “?” to check usage.&lt;/li&gt;
  &lt;li&gt;reply “最新” to get weekly highlights list &lt;/li&gt;
  &lt;li&gt;reply “绑定” to bind Discourse account to Wechat account&lt;/li&gt;
  &lt;li&gt;reply “解除绑定” to unbind.&lt;/li&gt;
  &lt;li&gt;reply “消息” to check recent forum notifications.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;section id=&quot;table-of-contents&quot; class=&quot;toc&quot;&gt;
  &lt;header&gt;
    &lt;h3&gt;Overview&lt;/h3&gt;
  &lt;/header&gt;
&lt;div id=&quot;drawer&quot;&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#biding-wechat-openid-to-discourse-user&quot;&gt;Biding Wechat OpenID to Discourse User&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#highlights-of-the-implementation&quot;&gt;Highlights of The Implementation.&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#discourse-api-called-to-fetch-user-notifications&quot;&gt;Discourse API called to fetch user notifications&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#fetching-and-analyse-json-data-with-php&quot;&gt;Fetching and Analyse Json Data with PHP&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#function-overloading-in-php&quot;&gt;Function Overloading in PHP&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#use-sprintf-get-pre-defined-template&quot;&gt;Use sprintf() get Pre-defined Template&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#connect-to-mysql-in-php&quot;&gt;Connect to MySQL in PHP&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#verify-strings-format&quot;&gt;Verify String’s Format&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#basic-php-form&quot;&gt;Basic PHP form&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

  &lt;/div&gt;
&lt;/section&gt;

&lt;h2 id=&quot;biding-wechat-openid-to-discourse-user&quot;&gt;Biding Wechat OpenID to Discourse User&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Store Discourse user API key, user binding key and username in a database.&lt;/li&gt;
  &lt;li&gt;discourse user request for the API key&lt;strong&gt;—&amp;gt;&lt;/strong&gt; &lt;/li&gt;
  &lt;li&gt;Administrators generate user API key &lt;strong&gt;—&amp;gt;&lt;/strong&gt; &lt;/li&gt;
  &lt;li&gt;set a snippet of API key as wechat activation key &lt;strong&gt;—&amp;gt;&lt;/strong&gt; &lt;/li&gt;
  &lt;li&gt;Insert the entry which contains information of api_key，Discourse username，and Wechat activation key.&lt;strong&gt;—&amp;gt;&lt;/strong&gt; &lt;/li&gt;
  &lt;li&gt;Detect user reply in form of the length of activation key and combination of numbers and characters &lt;strong&gt;—&amp;gt;&lt;/strong&gt; &lt;/li&gt;
  &lt;li&gt;when receiving a valid key, update the table with user’s wechat OpenID.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;highlights-of-the-implementation&quot;&gt;Highlights of The Implementation.&lt;/h2&gt;

&lt;h3 id=&quot;discourse-api-called-to-fetch-user-notifications&quot;&gt;Discourse API called to fetch user notifications&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;curl http://localhost:3000/notifications.json?api_key=test_d7fd0429940&amp;amp;api_username=test_user&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;fetching-and-analyse-json-data-with-php&quot;&gt;Fetching and Analyse Json Data with PHP&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;$json_url = &amp;quot;http://www.e1zone.de/top/weekly.json&amp;quot;; //weekly highlights &lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    $json = file_get_contents($json_url);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    if ($json != null){&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;        $weekly = json_decode($json);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    } else{&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;        throw new Exception(&amp;quot;Error Json Request&amp;quot;, 1);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;function-overloading-in-php&quot;&gt;Function Overloading in PHP&lt;/h3&gt;
&lt;p&gt;Define a function :&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;function db_operation(){&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;	//--------------------------binding account&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;	if (func_get_arg(0) == &amp;quot;bind&amp;quot;) { //check the first param&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;	    $apikey = func_get_arg(1);  //second&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;		$fromUsername = func_get_arg(2);  //third&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;				&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;				...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;use-sprintf-get-pre-defined-template&quot;&gt;Use sprintf() get Pre-defined Template&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;$textTpl = &amp;quot;&amp;lt;xml&amp;gt;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;            &amp;lt;ToUserName&amp;gt;&amp;lt;![CDATA[%s]]&amp;gt;&amp;lt;/ToUserName&amp;gt;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;            &amp;lt;FromUserName&amp;gt;&amp;lt;![CDATA[%s]]&amp;gt;&amp;lt;/FromUserName&amp;gt;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;            &amp;lt;CreateTime&amp;gt;%s&amp;lt;/CreateTime&amp;gt;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;            &amp;lt;MsgType&amp;gt;&amp;lt;![CDATA[%s]]&amp;gt;&amp;lt;/MsgType&amp;gt;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;            &amp;lt;Content&amp;gt;&amp;lt;![CDATA[%s]]&amp;gt;&amp;lt;/Content&amp;gt;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;            &amp;lt;FuncFlag&amp;gt;0&amp;lt;/FuncFlag&amp;gt;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;            &amp;lt;/xml&amp;gt;&amp;quot;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;            &lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;$resultStr .= sprintf($textTpl, $fromUsername, $toUsername, time(), $msgType, $text);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;connect-to-mysql-in-php&quot;&gt;Connect to MySQL in PHP&lt;/h3&gt;
&lt;p&gt;This is a not quite up-to-dated way:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;$connecTtion =mysql_connect($db_servername, $db_username, $db_password) OR DIE (&amp;quot;Unable to connect to database! Please try again later.&amp;quot;);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;if (!$connection){&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;	$output = &amp;quot;服务器异常，请稍后重试。&amp;quot;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;}else{&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;	mysql_select_db(&amp;quot;discourseUsers&amp;quot;);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;	// select operations&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;	//check if this user has already binded to an account&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    $sql = &amp;quot;SELECT `openID`,`username` FROM `account_binding` WHERE `openID` = &amp;#39;&amp;quot;.$fromUsername.&amp;quot;&amp;#39;;&amp;quot;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;	$result = mysql_query($sql);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;	if (mysql_num_rows($result) &amp;gt; 0) {  &lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;		$record = mysql_fetch_array($result);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;		$output = $record[&amp;quot;username&amp;quot;];&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;		mysql_close($connection);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;		return $output;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This is recommended way:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;$servername = &amp;quot;localhost&amp;quot;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;$username = &amp;quot;username&amp;quot;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;$password = &amp;quot;password&amp;quot;;&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;// Create connection&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;$conn = new mysqli($servername, $username, $password);&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;// Check connection&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;if ($conn-&amp;gt;connect_error) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    die(&amp;quot;Connection failed: &amp;quot; . $conn-&amp;gt;connect_error);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;} &lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;echo &amp;quot;Connected successfully&amp;quot;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;Note on the object-oriented example above: $connect_error was broken until PHP 5.2.9 and 5.3.0. If you need to ensure compatibility with PHP versions prior to 5.2.9 and 5.3.0, use the following code instead:
&lt;em&gt;// Check connection
if (mysqli_connect_error()) {
    die(“Database connection failed: “ . mysqli_connect_error());
}&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;verify-strings-format&quot;&gt;Verify String’s Format&lt;/h3&gt;
&lt;p&gt;Use function “&lt;strong&gt;preg_match(pattern,variable)&lt;/strong&gt;”
` if (preg_match(“/[A-Za-z0-9]+/”, $form_Content) &amp;amp;&amp;amp; strlen($form_Content) == 8) { …} `
This example here checks whether the $form_Content contains only letters and numbers and the length is exactly 8. 
It is used to detect the activition key. It is better to have user operation state stored in the server-side. However taken the Chinese input habit into account, it is OK. It is really rare to have regular input exactly like this way when the user write a message in Chinese.&lt;/p&gt;

&lt;h3 id=&quot;basic-php-form&quot;&gt;Basic PHP form&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;check user’s input:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;// define variables and set to empty values&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;$username = $api = $userbindingkey = &amp;quot;&amp;quot;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;$usernameErr = $apiErr = $userbindingkeyErr = &amp;quot;&amp;quot;;&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;if ($_SERVER[&amp;quot;REQUEST_METHOD&amp;quot;] == &amp;quot;POST&amp;quot;) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  if (empty($_POST[&amp;quot;username&amp;quot;])) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  $usernameErr = &amp;quot;Username 是必填的&amp;quot;;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  } else {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    $username = test_input($_POST[&amp;quot;username&amp;quot;]);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  }&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;x&quot;&gt; ...&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;function test_input($data) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    $data = trim($data);   //remove spaces&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    $data = stripslashes($data); //remove slashes&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    $data = htmlspecialchars($data); // translate special characters for security reason&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    return $data;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The form is written as following:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;form&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;method=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;post&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;action=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&amp;lt;?php echo htmlspecialchars($_SERVER[&amp;quot;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;PHP_SELF&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;quot;]);?&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;&amp;quot;&amp;gt; 
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;username&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;placeholder=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;输入用户名&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;input-xlarge&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;error&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;* &lt;span class=&quot;cp&quot;&gt;&amp;lt;?php echo $usernameErr;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;api&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;api&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;placeholder=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;API_key&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;input-xlarge&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;onkeyup=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;keyupFunction()&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;error&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;* &lt;span class=&quot;cp&quot;&gt;&amp;lt;?php echo $apiErr;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Button --&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;confirm&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;confirm&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;btn btn-success&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;submit&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;确定&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;form submit to the page self, in order to show the info in the same page:
&lt;code&gt;&amp;lt;form method=&quot;post&quot; action=&quot;&amp;lt;?php echo htmlspecialchars($_SERVER[&quot;PHP_SELF&quot;]);?&amp;gt;&quot;&amp;gt; &lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;When user release a key while input, call a function
&lt;code&gt;onkeyup=&quot;keyupFunction()&quot;&lt;/code&gt;
Following is the function in JS:&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;keyupFunction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;api&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;api&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;apilast8&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;api&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//last 8 letters&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;userbindingkey&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;apilast8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

  &lt;p&gt;&lt;a href=&quot;http://naiqus.github.io/wechat-mp-for-discourse-development/&quot;&gt;Wechat MP for Discourse Forum&lt;/a&gt; was originally published by Naiqus at &lt;a href=&quot;http://naiqus.github.io&quot;&gt;Wake up, Naiqus!&lt;/a&gt; on December 31, 2014.&lt;/p&gt;</content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Eclipse Grafiti Learning Notes]]></title>
  <link rel="alternate" type="text/html" href="http://naiqus.github.io/eclipse-grafiti-notes/" />
  <id>http://naiqus.github.io/eclipse-grafiti-notes</id>
  <published>2014-11-10T01:39:07+01:00</published>
  <updated>2014-11-10T01:39:07+01:00</updated>
  <author>
    <name>Naiqus</name>
    <uri>http://naiqus.github.io</uri>
    
  </author>
  <content type="html">&lt;section id=&quot;table-of-contents&quot; class=&quot;toc&quot;&gt;
  &lt;header&gt;
    &lt;h3&gt;Overview&lt;/h3&gt;
  &lt;/header&gt;
&lt;div id=&quot;drawer&quot;&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#introduction&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#installation&quot;&gt;Installation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#need-to-kown&quot;&gt;Need to kown&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#architecture&quot;&gt;Architecture:&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#hands-on-a-simple-example&quot;&gt;Hands-on: A simple example&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#plug-in-structure&quot;&gt;Plug-In structure:&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#create-plug-in&quot;&gt;1. Create Plug-in&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#diagram-type-agent&quot;&gt;2. Diagram Type Agent&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#create-a-diagram-type-provider&quot;&gt;Create a Diagram Type Provider&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#create-a-new-diagram-type-of-the-provider&quot;&gt;Create a new Diagram Type of the Provider&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#create-a-feature-provider&quot;&gt;Create a Feature Provider&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

  &lt;/div&gt;
&lt;/section&gt;
&lt;!-- /#table-of-contents --&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;It is immediately noticeable, that GEF is fairly complex and it needs a notable amount of work to get used to the framework. Therefore, and also to homogenize their tooling, SAP built a framework that hides GEF’s complexities from the developer and bridges EMF and GEF to ease and speed up the development of graphical editors. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;installation&quot;&gt;Installation&lt;/h2&gt;
&lt;p&gt;The installation source of the updatest release is included in the official release update channel. Install the “Graphiti SDK Plus” which includes a tutorial in the help document.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;need-to-kown&quot;&gt;Need to kown&lt;/h2&gt;

&lt;h3 id=&quot;architecture&quot;&gt;Architecture:&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/grafiti-architecture.png&quot; alt=&quot;Basic Architecture&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Interaction Component&lt;/strong&gt;: deal with the requests of input (from mouse, keyboard), like click, drag-and-drop, etc. Passing them to Diagram Type Agent. &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Rendering Engine&lt;/strong&gt;: to display the current data on the screen. Based on GEF in conjuction with Draw2d.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Diagram Type Agent&lt;/strong&gt;: has to be implemented by developer and could make use of a lot of services as well as standard implementations. With these implementations (Actions like &lt;em&gt;move, resize, delete, remove and print&lt;/em&gt;), one can build a functional editor very quickly. It could also be incrementally implemented in the further development. The major task of Diagram Type Agent is to modify the model data. Servaral models are applied there as follows:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;Domain Model&lt;/strong&gt;: contains the model which needs to be graphically displayed. A &lt;em&gt;.ecore&lt;/em&gt; model for example could be used here. In Graphiti, the data of Domain model is called &lt;strong&gt;Business Objects&lt;/strong&gt;.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Protogram Model&lt;/strong&gt;: ? contains all the information for displaying a diagram. Needs some redundant storage of data. Not quite clear. complish this part late.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Link Model&lt;/strong&gt;: the relation between Domain Model and Protogram Model. Connecting data from Domain Model to the graphical representation from Protogram Model. This is necessory for some actions on the editor, like moving and deleting objects, which changes data of Domain Model as well.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Example: User clicks on a kind of “Create” tool on the tools palette and draws a rectangle in the editor which indicates a rectangle object with the specified size and position should be created. Then the Diagram Type Agent act as following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Create a new object in the Domain Model,&lt;/li&gt;
  &lt;li&gt;Create the graphical visualization in the Pictogram Model. E.g. create Graphics Algorithms like a Rounded Rectangle. Initial them with colors and fonts and the layout.&lt;/li&gt;
  &lt;li&gt;Create link between the Pictogram Model and Domain Model.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/diagram-type-agent-new.png&quot; alt=&quot;Inside Diagram Type Agent&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features&lt;/strong&gt; are needed from developers like operations. &lt;strong&gt;Feature Provider&lt;/strong&gt; supplies the needed features. Processing the features leads to modifing the datas in the models. &lt;em&gt;*Diagram Type Provider&lt;/em&gt; handels the requests from interactive components. It also decides when to synchronise the Domain and Pictogram Models.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;Diagram Type Agent&lt;/strong&gt; is implemented in 4 steps:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Implement a &lt;em&gt;Diagram Type Provider&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Register it for a new &lt;em&gt;Diagram Type&lt;/em&gt;.&lt;/li&gt;
  &lt;li&gt;Create a &lt;em&gt;Feature Provider&lt;/em&gt;.&lt;/li&gt;
  &lt;li&gt;Create Feature, for example: &lt;em&gt;Add Feature&lt;/em&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;hands-on-a-simple-example&quot;&gt;Hands-on: A simple example&lt;/h2&gt;

&lt;p&gt;Get familier with the Graphiti plugin development procedure with help of the official tutorial, step by step.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;plug-in-structure&quot;&gt;Plug-In structure:&lt;/h3&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;strong&gt;org.eclipse.graphiti&lt;/strong&gt;
&lt;em&gt;The UI platform independent part of the framework&lt;/em&gt;&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;org.eclipse.graphiti.ui&lt;/strong&gt;
&lt;em&gt;The UI platform dependent part of the framework&lt;/em&gt;&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;org.eclipse.graphiti.mm&lt;/strong&gt;
&lt;em&gt;The Graphiti EMF model&lt;/em&gt;&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;org.eclipse.graphiti.pattern&lt;/strong&gt;
&lt;em&gt;Additional Graphiti framework for an alternative approach to combine all implementation aspects in one pattern instead of spreading accross several features.&lt;/em&gt;&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;org.eclipse.graphiti.export.batik&lt;/strong&gt;
&lt;em&gt;The framework export functionality, e.g. save as SVG (using Batik functionality)&lt;/em&gt;&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;org.eclipse.graphiti.doc&lt;/strong&gt;
&lt;em&gt;The Eclipse help content, e.g. the Graphiti tutorial&lt;/em&gt;&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;org.eclipse.graphiti.examples.common&lt;/strong&gt;
&lt;em&gt;General parts of samples and test tools for Graphiti; helper UIs, e.g. repository explorer and wizard (contains exemplary coding that cannot be re-used from within tools build on top of Graphiti)&lt;/em&gt;&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;org.eclipse.graphiti.examples.tutorial&lt;/strong&gt;
&lt;em&gt;The final implementation of the Graphiti tutorial&lt;/em&gt;&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;org.eclipse.graphiti.ui.capabilities&lt;/strong&gt;
&lt;em&gt;A small example showing how the Eclipse capabilities mechanism can be used with Graphiti&lt;/em&gt;&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;org.eclipse.graphiti.feature&lt;/strong&gt;
&lt;em&gt;The feature containing purely the Graphiti framework without any additional functionality like SVG export. This feature needs to be included into Eclipse installations containing tools build on top of Graphiti&lt;/em&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;create-plug-in&quot;&gt;1. Create Plug-in&lt;/h3&gt;

&lt;p&gt;Create a blank plug-in project using new project wizard. Add following dependencies :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;org.eclipse.graphiti&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;org.eclipse.graphiti.ui&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;org.eclipse.graphiti.examples.common&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;org.eclipse.core.resources&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;org.eclipse.core.runtime&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;org.eclipse.ui.views.properties.tabbed&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;diagram-type-agent&quot;&gt;2. Diagram Type Agent&lt;/h3&gt;

&lt;p&gt;A &lt;strong&gt;diagram type agent&lt;/strong&gt; should be implemented for creation of an editor of a viewer. As mentioned before, it consists of a &lt;strong&gt;diagram type provider&lt;/strong&gt; and a &lt;strong&gt;feature provider&lt;/strong&gt;&lt;/p&gt;

&lt;h4 id=&quot;create-a-diagram-type-provider&quot;&gt;Create a Diagram Type Provider&lt;/h4&gt;

&lt;p&gt;Add a new package according to the project, create a new class extend the base class &lt;em&gt;AbstractDiagramTypeProvider&lt;/em&gt; in oder to implement the interface &lt;em&gt;iDiagramTypeProvider&lt;/em&gt;.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rwth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ice&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;graphiti&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;helloworld&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;diagram&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.eclipse.graphiti.dt.AbstractDiagramTypeProvider&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HelloDiagramTypeProvider&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AbstractDiagramTypeProvider&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;HelloDiagramTypeProvider&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Add a new extension using the extension tab within MANIFEST.MF editor with the extension point &lt;strong&gt;&lt;em&gt;org.eclipse.graphiti.ui.diagramTypeProviders&lt;/em&gt;&lt;/strong&gt;. Set the corresponding ID, name, and set the class to the just created one.&lt;/p&gt;

&lt;h4 id=&quot;create-a-new-diagram-type-of-the-provider&quot;&gt;Create a new Diagram Type of the Provider&lt;/h4&gt;

&lt;p&gt;Add a new Diagram Type with extension point &lt;strong&gt;&lt;em&gt;org.eclipse.graphiti.ui.diagramTypes&lt;/em&gt;&lt;/strong&gt;, set its ID, name and save it. Right click on the &lt;strong&gt;&lt;em&gt;Diagram Type Provider&lt;/em&gt;&lt;/strong&gt; extension in the list and add a Diagram Type, choose the Diagram type just created.&lt;/p&gt;

&lt;p&gt;After these steps, the plugin.xml file should looks like this:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;&amp;lt;?eclipse version=&amp;quot;3.4&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;&amp;lt;extension&lt;/span&gt;
         &lt;span class=&quot;na&quot;&gt;point=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;org.eclipse.graphiti.ui.diagramTypes&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;diagramType&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;de.rwth-aachen.ice.graphiti.helloworld.hellodiagramtype&amp;quot;&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;hello diagramtype&amp;quot;&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Helloworld&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/diagramType&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;&amp;lt;/extension&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;&amp;lt;extension&lt;/span&gt;
         &lt;span class=&quot;na&quot;&gt;point=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;org.eclipse.graphiti.ui.diagramTypeProviders&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;diagramTypeProvider&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;rwth.ice.graphiti.helloworld.diagram.HelloDiagramTypeProvider&amp;quot;&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;context=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;org.eclipse.graphiti.ui.diagramEditor&amp;quot;&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;de.rwth-aachen.ice.graphiti.helloworld.HelloDiagramTypeProvider&amp;quot;&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;My first Diagram Type Provider&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
         &lt;span class=&quot;nt&quot;&gt;&amp;lt;diagramType&lt;/span&gt;
               &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;de.rwth-aachen.ice.graphiti.helloworld.hellodiagramtype&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
         &lt;span class=&quot;nt&quot;&gt;&amp;lt;/diagramType&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/diagramTypeProvider&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;&amp;lt;/extension&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/plugin&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;create-a-feature-provider&quot;&gt;Create a Feature Provider&lt;/h4&gt;

&lt;p&gt;Create a now class extends &lt;strong&gt;&lt;em&gt;DefaultFeatureProvider&lt;/em&gt;&lt;/strong&gt; in oder to implement the &lt;em&gt;IFeatureProvider&lt;/em&gt; interface. Initially, we don’t need to overwrite any methods.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rwth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ice&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;graphiti&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;helloworld&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;diagram&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.eclipse.graphiti.dt.IDiagramTypeProvider&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.eclipse.graphiti.ui.features.DefaultFeatureProvider&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HelloFeatureProvider&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DefaultFeatureProvider&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;HelloFeatureProvider&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IDiagramTypeProvider&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dtp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dtp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We need to create and set it in the construction of Diagram Type Provider as well. Add one line in the construction of DiagramTypeProvider:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;HelloDiagramTypeProvider&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;setFeatureProvider&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;HelloFeatureProvider&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


  &lt;p&gt;&lt;a href=&quot;http://naiqus.github.io/eclipse-grafiti-notes/&quot;&gt;Eclipse Grafiti Learning Notes&lt;/a&gt; was originally published by Naiqus at &lt;a href=&quot;http://naiqus.github.io&quot;&gt;Wake up, Naiqus!&lt;/a&gt; on November 10, 2014.&lt;/p&gt;</content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Hello World, again!]]></title>
  <link rel="alternate" type="text/html" href="http://naiqus.github.io/hello-world-again/" />
  <id>http://naiqus.github.io/hello-world-again</id>
  <published>2014-11-08T15:50:00+01:00</published>
  <updated>2014-11-08T15:50:00+01:00</updated>
  <author>
    <name>Naiqus</name>
    <uri>http://naiqus.github.io</uri>
    
  </author>
  <content type="html">&lt;p&gt;Yes, I just deployed a brand new blog. All the previous stuff is gone, although there was basically nothing over there.&lt;/p&gt;

&lt;p&gt;Learning to program by oneself is not quite a easy job for a lazzzzzy man. This blog is a good evidence.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://naiqus.github.io/hello-world-again/&quot;&gt;Hello World, again!&lt;/a&gt; was originally published by Naiqus at &lt;a href=&quot;http://naiqus.github.io&quot;&gt;Wake up, Naiqus!&lt;/a&gt; on November 08, 2014.&lt;/p&gt;</content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Sample Post]]></title>
  <link rel="alternate" type="text/html" href="http://naiqus.github.io/sample-post/" />
  <id>http://naiqus.github.io/sample-post</id>
  <updated>2013-05-31T00:00:00-00:00</updated>
  <published>2011-03-10T00:00:00+01:00</published>
  
  <author>
    <name>Naiqus</name>
    <uri>http://naiqus.github.io</uri>
    
  </author>
  <content type="html">&lt;section id=&quot;table-of-contents&quot; class=&quot;toc&quot;&gt;
  &lt;header&gt;
    &lt;h3&gt;Overview&lt;/h3&gt;
  &lt;/header&gt;
&lt;div id=&quot;drawer&quot;&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#html-elements&quot;&gt;HTML Elements&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#heading-1&quot;&gt;Heading 1&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#heading-2&quot;&gt;Heading 2&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#heading-3&quot;&gt;Heading 3&lt;/a&gt;            &lt;ul&gt;
              &lt;li&gt;&lt;a href=&quot;#heading-4&quot;&gt;Heading 4&lt;/a&gt;                &lt;ul&gt;
                  &lt;li&gt;&lt;a href=&quot;#heading-5&quot;&gt;Heading 5&lt;/a&gt;                    &lt;ul&gt;
                      &lt;li&gt;&lt;a href=&quot;#heading-6&quot;&gt;Heading 6&lt;/a&gt;&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#body-text&quot;&gt;Body text&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#blockquotes&quot;&gt;Blockquotes&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#list-types&quot;&gt;List Types&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#ordered-lists&quot;&gt;Ordered Lists&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#unordered-lists&quot;&gt;Unordered Lists&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#tables&quot;&gt;Tables&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#code-snippets&quot;&gt;Code Snippets&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#buttons&quot;&gt;Buttons&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#notices&quot;&gt;Notices&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

  &lt;/div&gt;
&lt;/section&gt;
&lt;!-- /#table-of-contents --&gt;

&lt;h2 id=&quot;html-elements&quot;&gt;HTML Elements&lt;/h2&gt;

&lt;p&gt;Below is just about everything you’ll need to style in the theme. Check the source code to see the many embedded elements within paragraphs.&lt;/p&gt;

&lt;h1 id=&quot;heading-1&quot;&gt;Heading 1&lt;/h1&gt;

&lt;h2 id=&quot;heading-2&quot;&gt;Heading 2&lt;/h2&gt;

&lt;h3 id=&quot;heading-3&quot;&gt;Heading 3&lt;/h3&gt;

&lt;h4 id=&quot;heading-4&quot;&gt;Heading 4&lt;/h4&gt;

&lt;h5 id=&quot;heading-5&quot;&gt;Heading 5&lt;/h5&gt;

&lt;h6 id=&quot;heading-6&quot;&gt;Heading 6&lt;/h6&gt;

&lt;h3 id=&quot;body-text&quot;&gt;Body text&lt;/h3&gt;

&lt;p&gt;Lorem ipsum dolor sit amet, test link adipiscing elit. &lt;strong&gt;This is strong&lt;/strong&gt;. Nullam dignissim convallis est. Quisque aliquam.&lt;/p&gt;

&lt;p class=&quot;image-pull-right&quot;&gt;&lt;img src=&quot;http://naiqus.github.io/images/3953273590_704e3899d5_m.jpg&quot; alt=&quot;Smithsonian Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This is emphasized&lt;/em&gt;. Donec faucibus. Nunc iaculis suscipit dui. 53 = 125. Water is H2O. Nam sit amet sem. Aliquam libero nisi, imperdiet at, tincidunt nec, gravida vehicula, nisl. The New York Times (That’s a citation). Underline.Maecenas ornare tortor. Donec sed tellus eget sapien fringilla nonummy. Mauris a ante. Suspendisse quam sem, consequat at, commodo vitae, feugiat in, nunc. Morbi imperdiet augue quis tellus.&lt;/p&gt;

&lt;p&gt;HTML and CSS are our tools. Mauris a ante. Suspendisse quam sem, consequat at, commodo vitae, feugiat in, nunc. Morbi imperdiet augue quis tellus. Praesent mattis, massa quis luctus fermentum, turpis mi volutpat justo, eu volutpat enim diam eget metus.&lt;/p&gt;

&lt;h3 id=&quot;blockquotes&quot;&gt;Blockquotes&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;Lorem ipsum dolor sit amet, test link adipiscing elit. Nullam dignissim convallis est. Quisque aliquam.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;list-types&quot;&gt;List Types&lt;/h2&gt;

&lt;h3 id=&quot;ordered-lists&quot;&gt;Ordered Lists&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Item one
    &lt;ol&gt;
      &lt;li&gt;sub item one&lt;/li&gt;
      &lt;li&gt;sub item two&lt;/li&gt;
      &lt;li&gt;sub item three&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;Item two&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;unordered-lists&quot;&gt;Unordered Lists&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Item one&lt;/li&gt;
  &lt;li&gt;Item two&lt;/li&gt;
  &lt;li&gt;Item three&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;tables&quot;&gt;Tables&lt;/h2&gt;

&lt;table rules=&quot;groups&quot;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Header1&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Header2&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;Header3&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;cell1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;cell2&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;cell3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;cell4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;cell5&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;cell6&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;cell1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;cell2&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;cell3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;cell4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;cell5&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;cell6&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
  &lt;tfoot&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Foot1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Foot2&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;Foot3&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tfoot&gt;
&lt;/table&gt;

&lt;h2 id=&quot;code-snippets&quot;&gt;Code Snippets&lt;/h2&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nf&quot;&gt;#container&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;-240px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;buttons&quot;&gt;Buttons&lt;/h2&gt;

&lt;p&gt;Make any link standout more when applying the &lt;code&gt;.btn&lt;/code&gt; class.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;#&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;btn btn-success&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Success Button&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div&gt;&lt;a href=&quot;#&quot; class=&quot;btn&quot;&gt;Primary Button&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;a href=&quot;#&quot; class=&quot;btn btn-success&quot;&gt;Success Button&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;a href=&quot;#&quot; class=&quot;btn btn-warning&quot;&gt;Warning Button&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;a href=&quot;#&quot; class=&quot;btn btn-danger&quot;&gt;Danger Button&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;a href=&quot;#&quot; class=&quot;btn btn-info&quot;&gt;Info Button&lt;/a&gt;&lt;/div&gt;

&lt;h2 id=&quot;notices&quot;&gt;Notices&lt;/h2&gt;

&lt;p class=&quot;notice&quot;&gt;&lt;strong&gt;Watch out!&lt;/strong&gt; You can also add notices by appending &lt;code&gt;{: .notice}&lt;/code&gt; to a paragraph.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://naiqus.github.io/sample-post/&quot;&gt;Sample Post&lt;/a&gt; was originally published by Naiqus at &lt;a href=&quot;http://naiqus.github.io&quot;&gt;Wake up, Naiqus!&lt;/a&gt; on March 10, 2011.&lt;/p&gt;</content>
</entry>

</feed>
